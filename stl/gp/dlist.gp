//#GOGP_IGNORE_BEGIN
///////////////////////////////////////////////////////////////////
//
// !!!!!!!!!!!! NEVER MODIFY THIS FILE MANUALLY !!!!!!!!!!!!
//
// This file was auto-generated by tool [github.com/vipally/gogp]
// Last update at: [Wed Nov 16 2016 22:56:13]
// Generate from:
//   [github.com/vipally/gx/stl/gp/dlist.gp.go]
//   [github.com/vipally/gx/stl/gp/gp.gpg] [GOGP_REVERSE_dlist]
//
// Tool [github.com/vipally/gogp] info:
// CopyRight 2016 @Ally Dale. All rights reserved.
// Author  : Ally Dale(vipally@gmail.com)
// Blog    : http://blog.csdn.net/vipally
// Site    : https://github.com/vipally
// BuildAt : [Oct 24 2016 20:25:45]
// Version : 3.0.0.final
// 
///////////////////////////////////////////////////////////////////
//#GOGP_IGNORE_END

<PACKAGE>

//#GOGP_REQUIRE(github.com/vipally/gx/stl/gp/fakedef,_)

//#GOGP_REQUIRE(github.com/vipally/gx/stl/gp/functorcmp)

var g<GLOBAL_NAME_PREFIX>DListGbl struct {
	cmp Cmp<GLOBAL_NAME_PREFIX>
}

func init() {
	g<GLOBAL_NAME_PREFIX>DListGbl.cmp = g<GLOBAL_NAME_PREFIX>DListGbl.cmp.CreateByName("#GOGP_GPGCFG(GOGP_DefaultCmpType)")
}

//double-way cycle link list node
type GOGPListNamePrefixDListNode struct {
	<VALUE_TYPE>
	prev, next *GOGPListNamePrefixDListNode
}

func (this *GOGPListNamePrefixDListNode) Get() *GOGPDListData {
	return &this.GOGPDListData
}

func (this *GOGPListNamePrefixDListNode) Set(v <VALUE_TYPE>) (old <VALUE_TYPE>) {
	old, this.<VALUE_TYPE> = this.<VALUE_TYPE>, v
	return
}

func (this *GOGPListNamePrefixDListNode) Next() (r *GOGPListNamePrefixDListNode) {
	if this != nil {
		r = this.next
	}
	return
}

func (this *GOGPListNamePrefixDListNode) Prev() (r *GOGPListNamePrefixDListNode) {
	if this != nil {
		r = this.prev
	}
	return
}

//type GOGPListNamePrefixDListNodeVisitor struct {
//	node, head *GOGPListNamePrefixDListNode
//}

//func (this *GOGPListNamePrefixDListNodeVisitor) Next() bool {
//	return false
//}
//func (this *GOGPListNamePrefixDListNodeVisitor) Prev() bool {
//	return false
//}
//func (this *GOGPListNamePrefixDListNodeVisitor) Node() *GOGPListNamePrefixDListNode {
//	return nil
//}

//func (this *GOGPListNamePrefixDList) Visitor(node *GOGPListNamePrefixDListNode) *GOGPListNamePrefixDListNodeVisitor {
//	return nil
//}

//list object
type GOGPListNamePrefixDList struct {
	head *GOGPListNamePrefixDListNode
}

//new object
func NewGOGPStackNamePrefixDList() *GOGPListNamePrefixDList {
	return &GOGPListNamePrefixDList{}
}

func (this *GOGPListNamePrefixDList) Len() int {
	return 0
}

func (this *GOGPListNamePrefixDList) Front() *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) Back() *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) Clear() *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) PushFront(v GOGPDListData) *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) PushBack(v GOGPDListData) *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) PushFrontList(other *GOGPListNamePrefixDList) {
	return
}
func (this *GOGPListNamePrefixDList) PushBackList(other *GOGPListNamePrefixDList) {
	return
}

func (this *GOGPListNamePrefixDList) InsertBefore(v GOGPDListData, mark *GOGPListNamePrefixDListNode) *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) InsertAfter(v GOGPDListData, mark *GOGPListNamePrefixDListNode) *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) Remove(node *GOGPListNamePrefixDListNode) *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) MoveFront(node *GOGPListNamePrefixDListNode) *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) MoveBck(node *GOGPListNamePrefixDListNode) *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) MoveBefore(node, mark *GOGPListNamePrefixDListNode) *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) MoveAfter(node, mark *GOGPListNamePrefixDListNode) *GOGPListNamePrefixDListNode {
	return nil
}
func (this *GOGPListNamePrefixDList) Sort() {
	return
}

