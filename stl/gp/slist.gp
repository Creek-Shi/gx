//#GOGP_IGNORE_BEGIN
///////////////////////////////////////////////////////////////////
//
// !!!!!!!!!!!! NEVER MODIFY THIS FILE MANUALLY !!!!!!!!!!!!
//
// This file was auto-generated by tool [github.com/vipally/gogp]
// Last update at: [Sun Nov 13 2016 22:26:02]
// Generate from:
//   [github.com/vipally/gx/stl/gp/slist.gp.go]
//   [github.com/vipally/gx/stl/gp/gp.gpg] [GOGP_REVERSE_slist]
//
// Tool [github.com/vipally/gogp] info:
// CopyRight 2016 @Ally Dale. All rights reserved.
// Author  : Ally Dale(vipally@gmail.com)
// Blog    : http://blog.csdn.net/vipally
// Site    : https://github.com/vipally
// BuildAt : [Oct 24 2016 20:25:45]
// Version : 3.0.0.final
// 
///////////////////////////////////////////////////////////////////
//#GOGP_IGNORE_END

//single-way link list

<PACKAGE>

//#GOGP_REQUIRE(github.com/vipally/gx/stl/gp/fakedef,_)

//#GOGP_REQUIRE(github.com/vipally/gx/stl/gp/functorcmp)

//list node
type <GLOBAL_NAME_PREFIX>SListNode struct {
	<VALUE_TYPE>
	next *<GLOBAL_NAME_PREFIX>SListNode
}

func (this *<GLOBAL_NAME_PREFIX>SListNode) Get() *GOGPSListData {
	return &this.<VALUE_TYPE>
}

type GOGPTreeNamePrefixRBTreeNodeVisitor struct {
	node, head *<GLOBAL_NAME_PREFIX>SListNode
}

func (this *GOGPTreeNamePrefixRBTreeNodeVisitor) Next() bool {
	return false
}

func (this *GOGPTreeNamePrefixRBTreeNodeVisitor) Node() *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}

//list object
type GOGPListNamePrefixSList struct {
	head, tail *<GLOBAL_NAME_PREFIX>SListNode
}

//new object
func NewGOGPStackNamePrefixSList() *GOGPListNamePrefixSList {
	return &GOGPListNamePrefixSList{}
}

func (this *GOGPListNamePrefixSList) Len() int {
	return 0
}
func (this *GOGPListNamePrefixSList) Visitor(node *<GLOBAL_NAME_PREFIX>SListNode) *GOGPTreeNamePrefixRBTreeNodeVisitor {
	return nil
}
func (this *GOGPListNamePrefixSList) Front() *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) Back() *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) Clear() *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) PushFront(v GOGPSListData) *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) PushBack(v GOGPSListData) *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) PushFrontList(other *GOGPListNamePrefixSList) {
	return
}
func (this *GOGPListNamePrefixSList) PushBackList(other *GOGPListNamePrefixSList) {
	return
}

func (this *GOGPListNamePrefixSList) InsertBefore(v GOGPSListData, mark *<GLOBAL_NAME_PREFIX>SListNode) *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) InsertAfter(v GOGPSListData, mark *<GLOBAL_NAME_PREFIX>SListNode) *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) Remove(node *<GLOBAL_NAME_PREFIX>SListNode) *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) MoveFront(node *<GLOBAL_NAME_PREFIX>SListNode) *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) MoveBck(node *<GLOBAL_NAME_PREFIX>SListNode) *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) MoveBefore(node, mark *<GLOBAL_NAME_PREFIX>SListNode) *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) MoveAfter(node, mark *<GLOBAL_NAME_PREFIX>SListNode) *<GLOBAL_NAME_PREFIX>SListNode {
	return nil
}
func (this *GOGPListNamePrefixSList) Sort() {
	return
}

