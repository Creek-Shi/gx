//GOGP_IGNORE_BEGIN
///////////////////////////////////////////////////////////////////
//
// !!!!!!!!!!!! NEVER MODIFY THIS FILE MANUALLY !!!!!!!!!!!!
//
// This file was auto-generated by tool [github.com/vipally/gogp]
// Last update at: [Sat Oct 22 2016 12:21:25]
// Generate from:
//   [github.com/vipally/gx/stl/gp/sort_slice.go]
//   [github.com/vipally/gx/stl/gp/gp.gpg] [GOGP_REVERSE_sort_slice]
//
// Tool [github.com/vipally/gogp] info:
// CopyRight 2016 @Ally Dale. All rights reserved.
// Author  : Ally Dale(vipally@gmail.com)
// Blog    : http://blog.csdn.net/vipally
// Site    : https://github.com/vipally
// BuildAt : [Oct  6 2016 14:25:07]
// Version : 3.0.0.final
// 
///////////////////////////////////////////////////////////////////
//GOGP_IGNORE_END

//this file define a template type for sort

<PACKAGE>

import (
	"sort"
)

//for sort
type <SLICE_NAME_PREFIX>SortSlice []<SLICE_ELEM>

func (this *<SLICE_NAME_PREFIX>SortSlice) Sort() {
	sort.Sort(this)
}

//data
func (this *<SLICE_NAME_PREFIX>SortSlice) Slice() []<SLICE_ELEM> {
	return *this
}

//push
func (this *<SLICE_NAME_PREFIX>SortSlice) Push(v <SLICE_ELEM>) int {
	*this = append(*this, v)
	return this.Len()
}

func (this *<SLICE_NAME_PREFIX>SortSlice) Pop() (r <SLICE_ELEM>) {
	if len(*this) > 0 {
		r = (*this)[len(*this)-1]
	}
	*this = (*this)[:len(*this)-1]
	return
}

//len
func (this *<SLICE_NAME_PREFIX>SortSlice) Len() int {
	return len(this.Slice())
}

//sort by Hash decend,the larger one first
func (this *<SLICE_NAME_PREFIX>SortSlice) Less(i, j int) (ok bool) {
	l, r := (*this)[i], (*this)[j]
	//#if GOGP_HasLess
	ok = l.Less(r)
	//#else
	ok = l < r
	//#endif
	return
}

//swap
func (this *<SLICE_NAME_PREFIX>SortSlice) Swap(i, j int) {
	(*this)[i], (*this)[j] = (*this)[j], (*this)[i]
}

